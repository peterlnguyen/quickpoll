// Generated by CoffeeScript 1.6.3
(function() {
  var data, formatPercent, graph_data, height, margin, svg, tip, type, width, x, xAxis, y, yAxis;

  type = function(d) {
    d.frequency = +d.frequency;
    return d;
  };

  margin = {
    top: 40,
    right: 20,
    bottom: 30,
    left: 40
  };

  width = 960 - margin.left - margin.right;

  height = 500 - margin.top - margin.bottom;

  formatPercent = d3.format(".0%");

  x = d3.scale.ordinal().rangeRoundBands([0, width], .1);

  y = d3.scale.linear().range([height, 0]);

  xAxis = d3.svg.axis().scale(x).orient("bottom");

  yAxis = d3.svg.axis().scale(y).orient("left").tickFormat(formatPercent);

  tip = d3.tip().attr("class", "d3-tip").offset([-10, 0]).html(function(d) {
    return "<strong>Frequency:</strong> <span style='color:red'>" + d.frequency + "</span>";
  });

  svg = d3.select("body").append("svg").attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  svg.call(tip);

  graph_data = function(results) {
    var choice, choices, count, key, value, voter_names, _i, _len, _results;
    choices = results.choices;
    _results = [];
    for (key = _i = 0, _len = choices.length; _i < _len; key = ++_i) {
      value = choices[key];
      console.log("value: ", value);
      console.log("key: ", key);
      _results.push((choice = value.choice, voter_names = value.voter_names, count = value.count, value));
    }
    return _results;
  };

  graph_data(results);

  console.log(d3.entries(results.choices));

  data = d3.entries(results.choices);

  console.log(data);

  x.domain(data.map(function(d) {
    return d.choices;
  }));

  y.domain([
    0, d3.max(data, function(d) {
      return d.votes;
    })
  ]);

  d3.tsv("./data.tsv", type, function(error, data) {});

  x.domain(data.map(function(d) {
    return d.letter;
  }));

  y.domain([
    0, d3.max(data, function(d) {
      return d.frequency;
    })
  ]);

  svg.append("g").attr("class", "x axis").attr("transform", "translate(0," + height + ")").call(xAxis);

  svg.append("g").attr("class", "y axis").call(yAxis).append("text").attr("transform", "rotate(-90)").attr("y", 6).attr("dy", ".71em").style("text-anchor", "end").text("Frequency");

  svg.selectAll(".bar").data(data).enter().append("rect").attr("class", "bar").attr("x", function(d) {
    return x(d.letter);
  }).attr("width", x.rangeBand()).attr("y", function(d) {
    return y(d.frequency);
  }).attr("height", function(d) {
    return height - y(d.frequency);
  }).on("mouseover", tip.show).on("mouseout", tip.hide);

}).call(this);
